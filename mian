


/****************************************
未完成版
****************************************/



/* 头文件声明区 */
#include <STC15F2K60S2.H>//单片机寄存器专用头文件
#include <Init.h>//初始化底层驱动专用头文件
#include <Led.h>//Led底层驱动专用头文件
#include <Key.h>//按键底层驱动专用头文件
#include <Seg.h>//数码管底层驱动专用头文件
#include "iic.h"//数模转换底层驱动头文件
#include "intrins.h"
/* 变量声明区 */
unsigned char Key_Val,Key_Down,Key_Old,Key_Up;//按键专用变量
unsigned char Key_Slow_Down;//按键减速专用变量
unsigned char Seg_Buf[8] = {10,10,10,10,10,10,10,10};//数码管显示数据存放数组
unsigned char Seg_Point[8] = {0,0,0,0,0,0,0,0};//数码管小数点数据存放数组
unsigned char Seg_Pos;//数码管扫描专用变量
unsigned int Seg_Slow_Down;//数码管减速专用变量
unsigned char ucLed[8] = {0,0,0,0,0,0,0,0};//Led显示数据存放数组
unsigned char dat[2]={30,60};
unsigned char ModeIndex=1;//模式索引
unsigned char LedModeTime[4]={4,4,4,4};
unsigned char LedModeTimeSet[4]={4,4,4,4};//LED模式真实配置设置数组,只存储高位，需要乘100
unsigned char LedModeIndex=0;//		0-模式一		3-模式4
unsigned int Timer=0;
bit InterfaceIndex=1;//页面索引		0-流转时间显示界面		1-PWM亮度等级调节界面
bit LedTimeFlag=0;//流转时间标志位
int i=0;
unsigned char LedPos=0;//LED流转变量
unsigned char LedPWMLevel=0;//LED灯亮度等级
unsigned char LedStart=1;//启动/停止标志位	0-停止	1-启动
unsigned char level=0;//亮度等级
unsigned char PWM_Timer12ms=0;
/* 键盘处理函数 */
void Key_Proc()
{
	if(Key_Slow_Down) return;
	Key_Slow_Down = 1;//键盘减速程序

	Key_Val = Key_Read();//实时读取键码值
	Key_Down = Key_Val & (Key_Old ^ Key_Val);//捕捉按键下降沿
	Key_Up = ~Key_Val & (Key_Old ^ Key_Val);//捕捉按键上降沿
	Key_Old = Key_Val;//辅助扫描变量
	
	switch (Key_Down)
    {
    	case 7:
			LedStart=1;
    		break;
    	case 5:
			InterfaceIndex=~InterfaceIndex;
			
		break;
		case 6:
			EEPROM_Write(dat,0,2);
    		break;
		
    	default:
    		break;
    }

}

/* 信息处理函数 */
void Seg_Proc()
{
	if(Seg_Slow_Down) return;
	Seg_Slow_Down = 1;//数码管减速程序
	LedPWMLevel=(Ad_Read(0x43)/64);
	
	if(InterfaceIndex==1)
	{
		Seg_Buf[0]=16;
		Seg_Buf[1]=ModeIndex;
		Seg_Buf[2]=16;
		Seg_Buf[4]=LedModeTime[LedModeIndex]/10%10;
		Seg_Buf[5]=LedModeTime[LedModeIndex]%10;
		Seg_Buf[6]=0;
		Seg_Buf[7]=0;
		if(Seg_Buf[4]==0)Seg_Buf[4]=10;
	}
	else
	{
		for(i=0;i<6;i++)//熄灭前6位数码管
		{
			Seg_Buf[i]=10;
		}
		Seg_Buf[6]=16;
		Seg_Buf[7]=LedPWMLevel%10;
		
	}
	
}

/* 其他显示函数 */
void Led_Proc()
{
	if(LedStart==1)
	{
		if(Timer==LedModeTimeSet[LedModeIndex]*100)
		{	
			Timer=0;  
			switch (LedModeIndex)
			{
				case 0:
					if(++LedPos==8)
					{
						LedPos=7;
						LedModeIndex=1;
					}			
					break;
				case 1:
					if(--LedPos==255)
					{
						
						LedModeIndex=2;
						LedPos=0;
					}	
					break;
				case 2:
					
					if(++LedPos==4)
					{
						LedPos=3;
						LedModeIndex=3;
					}
					break;
				case 3:

					if(++LedPos==8)
					{
						LedPos=1;
						LedModeIndex=0;
					}
				break;
			
				default:
					break;
			}
		}
	
	if(LedModeIndex<2)
	{
		for(i=0;i<8;i++)
		{
			ucLed[i]=(i==LedPos);
		}
	}
	else
	{
		for(i=0;i<8;i++)
		{
			ucLed[i]=((i==LedPos)||(i==7-LedPos));
			
		}
	}
}


}

/* 定时器0中断初始化函数 */
void Timer0Init(void)		//1毫秒@12.000MHz
{
	AUXR &= 0x7F;		//定时器时钟12T模式
	TMOD &= 0xF0;		//设置定时器模式
	TL0 = 0x18;		//设置定时初始值
	TH0 = 0xFC;		//设置定时初始值
	TF0 = 0;		//清除TF0标志
	TR0 = 1;		//定时器0开始计时
	ET0 = 1;    //定时器中断0打开
	EA = 1;     //总中断打开
}

/* 定时器0中断服务函数 */
void Timer0Server() interrupt 1
{  
	if(++Key_Slow_Down == 10) Key_Slow_Down = 0;//键盘减速专用
	if(++Seg_Slow_Down == 500) Seg_Slow_Down = 0;//数码管减速专用
	if(++Seg_Pos == 8) Seg_Pos = 0;//数码管显示专用
	if(++PWM_Timer12ms==12)PWM_Timer12ms=0;
	if(((LedPWMLevel+1)*3)>=PWM_Timer12ms)
	{
	  Led_Disp(Seg_Pos,ucLed[Seg_Pos]);
	}
	else
	{
		Led_Disp(Seg_Pos,0);
	}

	Seg_Disp(Seg_Pos,Seg_Buf[Seg_Pos],Seg_Point[Seg_Pos]);

	Timer++;
	
}

/* Main */
void main()
{
	EEPROM_Read(dat,0,2);
	System_Init();
	Timer0Init();
	while (1)
	{
		Led_Proc();
		Key_Proc();
		Seg_Proc();
		
	}
}

